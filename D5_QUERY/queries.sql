-- Table Counts

SELECT 'fitnesses' AS table_name, (SELECT COUNT(*) FROM FITNESS) AS table_count FROM dual UNION
SELECT 'addresses', (SELECT COUNT(*) FROM ADDRESS) FROM dual UNION
SELECT 'memberschips', (SELECT COUNT(*) FROM MEMBERCHIPCARD) FROM dual UNION
SELECT 'abonnements', (SELECT COUNT(*) FROM ABONNEMENT) FROM dual UNION
SELECT 'members', (SELECT COUNT(*) FROM MEMBER) FROM dual UNION
SELECT 'machines', (SELECT COUNT(*) FROM MACHINE) FROM dual UNION
SELECT 'exercises', (SELECT COUNT(*) FROM EXERCISE) FROM dual UNION
SELECT 'difficulty', (SELECT COUNT(*) FROM DIFFICULTY) FROM dual UNION
SELECT 'musclegroups', (SELECT COUNT(*) FROM MUSCLEGROUP) FROM dual UNION
SELECT 'timeofpractices', (SELECT COUNT(*) FROM TIMEOFPRACTICE) FROM dual;

-- Query 1: Relatie Veel-op-veel

SELECT f.NAME, f.SURFACE, mc.STARTDATE, mc.ENDDATE, m.NAME, m.BIRTH_DATE, m.GENDER FROM FITNESS f
JOIN MEMBERCHIPCARD mc on f.FITNESSID = mc.FITNESS_FITNESSID
JOIN MEMBER m on mc.MEMBER_MEMBERID = m.MEMBERID;

-- Query 2: 2 niveauâ€™s diep
SELECT f.NAME, f.SURFACE, m.NAME, e.NAME FROM FITNESS f
JOIN MACHINE m on f.FITNESSID = m.FITNESS_FITNESSID
JOIN EXERCISE e on m.MACHINEID = e.MACHINE_MACHINEID
ORDER BY f.NAME, m.NAME, e.NAME;

-- Query 3: Time of practice
SELECT t.TIMEOFPRACTICEID, m.NAME, e.NAME, d.NAME, mg.NAME, t.REPS, t.SETS, t.ADDEDWEIGHT, t.PRACTICEDATE FROM TIMEOFPRACTICE t
JOIN MEMBER m on t.MEMBER_MEMBERID = m.MEMBERID
JOIN EXERCISE e on t.EXERCISE_EXERCISEID = e.EXERCISEID
JOIN DIFFICULTY d on d.DIFFICULTYID = e.DIFFICULTY_DIFFICULTYID
JOIN MUSCLEGROUP mg on e.MUSCLEGROUP_MUCLSEGROUPID = mg.MUCLSEGROUPID
ORDER BY t.TIMEOFPRACTICEID;

-- Query 4: Memberschipcard
SELECT mc.MEMBERSCHIPID, mc.STARTDATE, mc.ENDDATE, ab.NAME, f.Name, ad.POSTALCODE, m.NAME FROM FITNESS f
JOIN ADDRESS ad on f.ADDRESS_ADDRESSID = ad.ADDRESSID
JOIN MEMBERCHIPCARD mc on f.FITNESSID = mc.FITNESS_FITNESSID
JOIN ABONNEMENT ab on ab.ABONNEMENTID = mc.ABONNEMENT_ABONNEMENTID
JOIN MEMBER m on mc.MEMBER_MEMBERID = m.MEMBERID
ORDER BY mc.MEMBERSCHIPID;

-- Constraint 1: Address
INSERT INTO ADDRESS (ADDRESSID, STREET, STREETNUMBER, POSTALCODE)
VALUES (1, 'Test', 1, 999);

-- Constraint 2: Member
INSERT INTO MEMBER (MEMBERID, NAME, BIRTH_DATE, EMAIL, GENDER, BODYWEIGHT)
VALUES (6, 'Test', '01/01/2001', 'test@test.com', 'T', 50);

-- Constraint 3: Member
INSERT INTO MEMBER (MEMBERID, NAME, BIRTH_DATE, EMAIL, GENDER, BODYWEIGHT)
VALUES (6, 'Test', '01/01/2001', 'test@test.com', 'M', -1);

-- Constraint 4: Membershipcard
INSERT INTO MEMBERCHIPCARD (MEMBERSCHIPID, STARTDATE, ENDDATE, FITNESS_FITNESSID, MEMBER_MEMBERID, ABONNEMENT_ABONNEMENTID)
VALUES (8, '01/01/2024', '01/01/2023', 1, 1, 1)